from fastapi import FastAPI
import requests, json, os

app = FastAPI()

@app.post("/submit_brief")
async def submit_brief(brief: dict):
    project = brief.get("project")
    text = brief.get("brief")

    # --- Simple example of auto task splitting ---
    tasks = [
        {"task_id": "1", "type": "frontend", "description": "Build UI"},
        {"task_id": "2", "type": "backend", "description": "Build API"}
    ]

    results = []
    for t in tasks:
        t["project"] = project
        url = "http://127.0.0.1:9001/task" if t["type"] == "frontend" else "http://127.0.0.1:9002/task"
        res = requests.post(url, json=t)
        data = res.json()
        results.append(data)

        # --- Save each file generated by the agent ---
        for f in data.get("files", []):
            path = f"../output/{project.replace(' ', '_')}/{f['path']}"
            os.makedirs(os.path.dirname(path), exist_ok=True)
            with open(path, "w") as codefile:
                codefile.write(f["content"])

    # --- Save summary JSON file ---
    os.makedirs(f"../output/{project.replace(' ', '_')}", exist_ok=True)
    summary_path = f"../output/{project.replace(' ', '_')}/summary.json"
    with open(summary_path, "w") as f:
        json.dump({"project": project, "results": results}, f, indent=4)

    return {"status": "completed", "summary_file": summary_path, "results": results}
